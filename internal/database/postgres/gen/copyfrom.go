// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package gen

import (
	"context"
)

// iteratorForCreateObservationsAsInt16UsingCopy implements pgx.CopyFromSource.
type iteratorForCreateObservationsAsInt16UsingCopy struct {
	rows                 []CreateObservationsAsInt16UsingCopyParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateObservationsAsInt16UsingCopy) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateObservationsAsInt16UsingCopy) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].LocationID,
		r.rows[0].SourceTypeID,
		r.rows[0].ObserverID,
		r.rows[0].ObservationTimeUtc,
		r.rows[0].Value,
	}, nil
}

func (r iteratorForCreateObservationsAsInt16UsingCopy) Err() error {
	return nil
}

// CreateObservationsCopy inserts a batch of observations using postgres COPY protocol,
// making it the fastest way to perform large inserts of observations.
// Input yields are expected as 16-bit integers, with 0 representing 0%
// and 30000 representing 100% of capacity.
func (q *Queries) CreateObservationsAsInt16UsingCopy(ctx context.Context, arg []CreateObservationsAsInt16UsingCopyParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"obs", "observed_generation_values"}, []string{"location_id", "source_type_id", "observer_id", "observation_time_utc", "value"}, &iteratorForCreateObservationsAsInt16UsingCopy{rows: arg})
}

// iteratorForCreatePredictionsAsInt16UsingCopy implements pgx.CopyFromSource.
type iteratorForCreatePredictionsAsInt16UsingCopy struct {
	rows                 []CreatePredictionsAsInt16UsingCopyParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreatePredictionsAsInt16UsingCopy) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreatePredictionsAsInt16UsingCopy) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].HorizonMins,
		r.rows[0].P10,
		r.rows[0].P50,
		r.rows[0].P90,
		r.rows[0].ForecastID,
		r.rows[0].TargetTimeUtc,
		r.rows[0].Metadata,
	}, nil
}

func (r iteratorForCreatePredictionsAsInt16UsingCopy) Err() error {
	return nil
}

// CreatePredictionsAsInt16UsingCopy inserts predicted generation values using
// postgres COPY protocol, making it the fastest way to perform large inserts of predictions.
// Input p-values are expected as 16-bit integers, with 0 representing 0%
// and 30000 representing 100% of capacity.
func (q *Queries) CreatePredictionsAsInt16UsingCopy(ctx context.Context, arg []CreatePredictionsAsInt16UsingCopyParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"pred", "predicted_generation_values"}, []string{"horizon_mins", "p10", "p50", "p90", "forecast_id", "target_time_utc", "metadata"}, &iteratorForCreatePredictionsAsInt16UsingCopy{rows: arg})
}
