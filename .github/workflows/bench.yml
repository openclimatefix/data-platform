# Workflow to run benchmarking.
# * Runs on new semantic tags, pushes to main, and pull requests to main.

name: Benchmark

on:
  push:
    tags: ['v*']
    branches: ['main']
    paths-ignore: ['README.md', 'examples/**', '.github/workflows/test.yml', '.github/workflows/build.yml']
  pull_request:
    branches: ['main']
    paths-ignore: ['README.md', 'examples/**', '.github/workflows/test.yml', '.github/workflows/build.yml']

env:
  PROTOC_VERSION: '3.15.8'

jobs:
  bench:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Export Go env vars
        id: go-vars
        run: echo "GOMODCACHE=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"

      - name: Restore cached protoc instance
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: $HOME/.local/bin/protoc
          key: ${{ runner.os }}-protoc-${{ env.PROTOC_VERSION }}

      - name: Set up Protoc compiler
        if:
          steps.cache-protoc.outputs.cache-hit != 'true'
        run: |
          curl -OL https://github.com/google/protobuf/releases/download/v${{ env.PROTOC_VERSION }}/protoc-${{ env.PROTOC_VERSION }}-linux-x86_64.zip
          unzip protoc-${{ env.PROTOC_VERSION }}-linux-x86_64.zip -d $HOME/.local
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Restore cached go tools
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: '{{ steps.go-vars.outputs.GOMODCACHE }}'
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.sum') }}

      - name: Generate code
        run: go install tool && make gen

      - name: Get benchmark filename for base branch
        id: base-benchfile
        if: github.event_name == 'pull_request'
        run: |
          BASE_BENCHFILE="${{ github.event.pull_request.base.ref }}"
          echo "name=bench-${BASE_BENCHFILE////-}.txt" >> "$GITHUB_OUTPUT"

      - name: Get benchmark filename for head branch
        id: head-benchfile
        run: |
          HEAD_BENCHFILE="${{ github.head_ref || github.ref_name }}"
          echo "name=bench-${HEAD_BENCHFILE////-}.txt" >> "$GITHUB_OUTPUT"

      - name: Restore PR base branch benchmarks
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-base-bench
        if: github.event_name == 'pull_request'
        with:
          path: ${{ steps.base-benchfile.outputs.name }}
          key: ${{ runner.os }}-bench-${{ steps.base-benchfile.outputs.name }}

      - name: Run benchmarks
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          make bench > ${{ steps.head-benchfile.outputs.name }}
          cat ${{ steps.head-benchfile.outputs.name }}

      - name: Cache benchmark results
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        if: github.event_name != 'pull_request'
        with:
          path: ${{ steps.head-benchfile.outputs.name }}
          key: ${{ runner.os }}-bench-${{ steps.head-benchfile.outputs.name }}

      - name: Compare benchmarks
        id: bench-diff
        if: github.event_name == 'pull_request' && steps.cache-base-bench.outputs.cache-hit == 'true'
        run: |
          go tool benchstat ${{ steps.base-benchfile.outputs.name }} ${{ steps.head-benchfile.outputs.name }} >> bench-diff.txt
          cat bench-diff.txt

      - name: Write results to markdown file
        env:
          FILENAME: ${{ steps.head-benchfile.outputs.name }}
        run: |
          {
            echo "### Benchmark Results"
            echo ""
            echo "<details><summary>Benchmark results</summary>"
            echo ""
            echo '```'
            cat "$FILENAME"
            echo '```'
            echo "</details>"
          } > bench-comment.md

      - name: Write benchmark diff to markdown file
        if: github.event_name == 'pull_request' && steps.cache-base-bench.outputs.cache-hit == 'true'
        run: |
          {
            echo ""
            echo "<details><summary>Benchmark vs base branch</summary>\n"
            echo "```"
            cat bench-diff.txt
            echo "```\n"
            echo "</details>\n"
          } >> bench-comment.md

      - name: Upload benchmark results
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bench-comment-${{ github.event.number }}
          path: bench-comment.md
          if-no-files-found: error
          retention-days: 1
          overwrite: true

