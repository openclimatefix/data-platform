# Workflow to run benchmarking.
# * Runs on new semantic tags, pushes to main, and pull requests to main.

name: Benchmark
on:
  push:
    tags: ['v*']
    branches: ['main']
    paths-ignore: ['README.md', 'examples/**', '/github/workflows/test.yml', '/github/workflows/build.yml']
  pull_request:
    branches: ['main']
    paths-ignore: ['README.md', 'examples/**', '/github/workflows/test.yml', '/github/workflows/build.yml']

jobs:
  bench:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Set up Protoc compiler
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0

      - name: Generate code
        run: go install tool && make gen

      - name: Restore PR base branch benchmarks
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      id: cache-base-banch
        with:
          path: 'bench-main.txt'
          # Use base SHA for pull requests to ensure cache is reused
          key: ${{ runner.os }}-bench-${{ (github.event.pull_request.base.sha != github.event.after) && github.event.pull_request.base.sha || github.event.after }}

      - name: Run benchmarks
        id: bench
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          export FILENAME=bench-${BRANCH_NAME////-}.txt
	      make bench > $FILENAME
          echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"
          cat $FILENAME

      - name: Compare benchmarks
        id: bench-diff
        if: github.event_name == 'pull_request' && steps.cache-base-banch.outputs.cache-hit != 'true'
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          go tool benchstat bench-main.txt bench-${BRANCH_NAME////-}.txt >> bench-diff.txt
          echo "filename=bench-diff.txt" >> "$GITHUB_OUTPUT"
          cat bench-diff.txt

      - name: Write results to markdown file
        run:
          echo $"### Benchmark Results\n" > bench-comment.md
          echo $"<details><summary>Benchmark results</summary>\n" >> bench-comment.md
          echo $"```" >> bench-comment.md
          cat ${{ steps.bench.outputs.filename }} >> bench-comment.md
          echo $"```\n" >> bench-comment.md
          echo $"</details>\n" >> bench-comment.md

      - name: Write benchmark diff to markdown file
        if: github.event_name == 'pull_request' && steps.cache-base-banch.outputs.cache-hit != 'true'
        run:
          echo $"<details><summary>Benchmark vs base branch</summary>\n" >> bench-comment.md
          echo $"```" >> bench-comment.md
          cat ${{ steps.bench-diff.outputs.filename }} >> bench-comment.md
          echo $"```\n" >> bench-comment.md
          echo $"</details>\n" >> bench-comment.md
          

      - name: Upload benchmark results
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bench-comment-${{ github.head_ref }}
          path: bench-comment.md
          if-no-files-found: fail
          retention-days: 1
          overwrite: true

