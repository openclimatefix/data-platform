name: Build Containers

on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'README.md'

jobs:
  build-container:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - folder: frontend
            image: ghcr.io/devsjc/fcfs-frontend
          - folder: api
            image: ghcr.io/devsjc/fcfs-api
          - folder: api/src/internal/repository/postgres/infra
            image: ghcr.io/devsjc/fcfs-pgdb

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@74a5d142397b4f367a81961eba4e8cd7edddf772

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Container
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ${{ matrix.folder }}
          file: ${{ matrix.folder }}/Containerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=${{ matrix.image }}:buildcache,mode=max
          provenance: false

