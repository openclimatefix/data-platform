// Common messages for the Quartz API

syntax = "proto3";

package ocf.dp;

import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/devsjc/fcfs/dp/internal/protogen/ocf/dp;dp";

// --- Common message types ----------------------------------------------------------------------

enum EnergySource {
  UNSPECIFIED = 0;
  SOLAR = 1;
  WIND = 2;
}

message Yield {
  float yield_percent = 1;
  google.protobuf.Timestamp timestamp_unix = 2;
}

message YieldPrediction {
  message Uncertainty {
    float lower_percent = 1; 
    float upper_percent = 2; 
  }
  
  float yield_percent = 1;
  google.protobuf.Timestamp timestamp_unix = 2;
  Uncertainty uncertainty = 3;
}

/* LatLng represents a WSG84 coordinate pair.
 * Float precision enables a resolution of about 1cm,
 * which is more precise than we'll ever have data for.
 */
message LatLng {
  float latitude = 1[
    (buf.validate.field).float.lte = 90,
    (buf.validate.field).float.gte = -90
  ];
  float longitude = 2 [
    (buf.validate.field).float.lte = 180,
    (buf.validate.field).float.gte = -180
  ];
}

message Model {
  /* The name of the model to use.
   * The name must be at least 3 characters long.
   */
  string model_name = 1 [
    (buf.validate.field).string.min_len = 3
  ];
  /* The version of the model to use.
   * If not specified, the latest version will be used.
   */
  string model_version = 2;
}

message TimeWindow {
  /* The start of the time window, inclusive.
   * Cannot be more than 7 days before end_timestamp_unix.
   */
  google.protobuf.Timestamp start_timestamp_unix = 1 [
    (buf.validate.field).timestamp = { gt: { seconds: 112000000}, lt_now: true }
  ];
  /* The end of the time window, inclusive.
   * Cannot be more than 7 days after start_timestamp_unix.
   */
  google.protobuf.Timestamp end_timestamp_unix = 2 [
    (buf.validate.field).timestamp.gt = { seconds: 112000000}
  ];

  option (buf.validate.message).cel = {
    id: "maximum_window_size"
    message: "window size must not exceed 7 days"
    expression: "this.end_timestamp_unix - this.start_timestamp_unix <= duration('604800s')"
  };
  option (buf.validate.message).cel = {
    id: "start_before_end"
    message: "start_timestamp_unix must be before end_timestamp_unix"
    expression: "this.start_timestamp_unix <= this.end_timestamp_unix"
  };
}

// --- Requests and Responses --------------------------------------------------------

message GetPredictedTimeseriesRequest {
  int32 location_id = 1;
  EnergySource energy_source = 2;

  /* The desired minimum difference between the forecast initialisation time,
   * and each target time in minutes.
   * A value of 0 gives the most recently predicted values for each target time (default).
   */
  int32 horizon_mins = 3;
  /* The time window to fetch predicted yields for.
   * If not specified, the default is 48 hours before the current time
   * to 36 hours after the current time.
   */
  TimeWindow time_window = 4;
  /* The model to fetch predicted yields from.*/
  Model model = 5[
    (buf.validate.field).required = true
  ];
}

message GetPredictedTimeseriesResponse {
  int32 location_id = 1;
  uint64 capacity_watts = 2;
  repeated YieldPrediction yields = 3;
}


message GetPredictedTimeseriesDeltasRequest {
  int32 location_id = 1;
  EnergySource energy_source = 2;

  /* The desired difference between the initialisation time and the target time in minutes.
   * 0 gives the most recently predicted deltas, and is the default if not specified.
   */
  int32 horizon_mins = 3;
  /* The model to fetch predicted yields from. */
  Model model = 4;
  /* The name of the observer to compare predicted yields against.
   * If not specified, the default observer will be used.
   */
  string observer_name = 5;
  /* The time window to fetch predicted deltas for.
   * If not specified, the default is 48 hours before the current time
   * to 36 hours after the current time.
   */
  TimeWindow time_window = 6;
}

message GetPredictedTimeseriesDeltasResponse {
  message YieldDelta {
    float delta_percent = 1;
    google.protobuf.Timestamp timestamp_unix = 2;
  }

  int32 location_id = 1;
  uint64 capacity_watts = 2;
  repeated YieldDelta deltas = 3;
}


message GetObservedTimeseriesRequest {
  int32 location_id = 1;
  string observer_name = 2;
  EnergySource energy_source = 3;
  /* The time window to fetch observed yields for.
   * If not specified, the default is 48 hours before the current time
   * to 36 hours after the current time.
   */
  TimeWindow time_window = 4;
}

message GetObservedTimeseriesResponse {
  int32 location_id = 1;
  uint64 capacity_watts = 2;
  repeated Yield yields = 3;
}


message GetPredictedCrossSectionRequest {
  repeated int32 location_ids = 1;
  EnergySource energy_source = 2;
  google.protobuf.Timestamp timestamp_unix = 3;
  /* The model to fetch predicted yields from. */
  Model model = 4;
}

message GetPredictedCrossSectionResponse {
  message YieldPredictionAtLocation {
    int32 location_id = 1;
    uint64 capacity_watts = 2;
    float yield_percent = 3;
  }

  google.protobuf.Timestamp timestamp_unix = 1;
  repeated YieldPredictionAtLocation yields = 2;
}


message GetLatestPredictionsRequest {
  int32 location_id = 1;
  EnergySource energy_source = 2;
  /* The time to search backwards from to find the 'latest' forecast.
   * If not specified, the current time will be used.
   */
  google.protobuf.Timestamp pivot_timestamp_unix = 3;
  /* The model to fetch the latest forecast from. */
  Model model = 4;
}

message GetLatestPredictionsResponse {
  int32 location_id = 1;
  uint64 capacity_watts = 2;
  int64 forecast_id = 3;
  repeated YieldPrediction yields = 4;
}


message CreateModelRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 3
  ];
  string version = 2 [
    (buf.validate.field).string.min_len = 1
  ];
}

message CreateModelResponse {
  int32 model_id = 1;
}


message CreateForecastRequest {
  message PredictedGenerationValue {
    int32 horizon_mins = 1;
    float p50_pct = 2;
    float p10_pct = 3;
    float p90_pct = 4;
    string metadata = 5;
  }

  message Forecast {
    int32 model_id = 1;
    int32 location_id = 2;
    EnergySource energy_source = 3;
    google.protobuf.Timestamp init_time_utc = 4;
  }

  CreateForecastRequest.Forecast forecast = 1;
  repeated CreateForecastRequest.PredictedGenerationValue predicted_generation_values = 2;
}

message CreateForecastResponse {
  int64 forecast_id = 1;
}


message CreateSiteRequest {
  string name = 1;
  EnergySource energy_source = 2;
  LatLng latlng = 3;
  uint64 capacity_watts = 4;
  string metadata = 5;
}

message CreateSiteResponse {
  int32 location_id = 1;
}


message CreateGspRequest {
  string name = 1;
  EnergySource energy_source = 2;
  string geometry = 3;
  uint64 capacity_watts = 4;
  string metadata = 5;
}

message CreateGspResponse {
  int32 location_id = 1;
}


message GetLocationRequest {
  // TODO: Make this location name?
  int32 location_id = 1;
  EnergySource energy_source = 2;
}

message GetLocationResponse {
  int32 location_id = 1;
  string name = 2;
  /* The characteristic coordinates of the location.
   * For sites, this is simply their point coordinates,
   * whilst for area-based locations, this is their centroid.
   */
  LatLng latlng = 3;
  uint64 capacity_watts = 4;
  string metadata = 5;
}


message GetLocationsAsGeoJSONRequest {
  repeated int32 location_ids = 1;
  /* If true, the GeoJSON will not be simplified.
   * Defaults to false if not set to reduce response size.
   */
  bool unsimplified = 2;
}

message GetLocationsAsGeoJSONResponse {
  string geojson = 1;
}


message CreateObservationsRequest {
  int32 location_id = 1;
  EnergySource energy_source = 2;
  string observer_name = 3;
  repeated Yield yields = 4;
}

message CreateObservationsResponse {}


message CreateObserverRequest {
  string name = 1;
}

message CreateObserverResponse {
  int32 observer_id = 1;
}


message GetWeekAverageDeltasRequest {
  int32 location_id = 1;
  EnergySource energy_source = 2;
  /* The characteristic time to detrmine averages for.
   * The time component specifies the initialization time,
   * and the date component is to define the end of the seven-day period.
   */
  google.protobuf.Timestamp pivot_time = 3;
  Model model = 4 [
    (buf.validate.field).required = true
  ];
  string observer_name = 5;
}

message GetWeekAverageDeltasResponse {
  message AverageDelta {
    int32 horizon_mins = 1;
    float delta_percent = 2;
  }

  repeated AverageDelta deltas = 1;
  uint64 capacity_watts = 2;
  /* The initialisation time that was compared across the week.
   * Formatted as HH:MM, e.g. "12:00"
   */
  string init_time = 3;
}

message GetLocationsWithinRequest {
  int32 location_id = 1;
}

message GetLocationsWithinResponse {
  message IdName {
    int32 location_id = 1;
    string name = 2;
  }

  repeated GetLocationsWithinResponse.IdName locations = 1;
}
