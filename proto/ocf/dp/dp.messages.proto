// Common messages for the Quartz API

syntax = "proto3";

package ocf.dp;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "buf/validate/validate.proto";
import "ocf/dp/dp.rules.proto";

option go_package = "github.com/devsjc/fcfs/dp/internal/protogen/ocf/dp;dp";

// --- Common message types ----------------------------------------------------------------------

enum EnergySource {
  ENERGY_SOURCE_UNSPECIFIED = 0;
  SOLAR = 1;
  WIND = 2;
}

enum LocationType {
  LOCATION_TYPE_UNSPECIFIED = 0;
  SITE = 1;
  GSP = 2;
  DNO = 3;
  NATION = 4;
}
/* LatLng represents a WSG84 coordinate pair.
 * Float precision enables a resolution of about 1cm,
 * which is more precise than we'll ever have data for.
 */
message LatLng {
  float latitude = 1[
    (buf.validate.field).float.lte = 90,
    (buf.validate.field).float.gte = -90
  ];
  float longitude = 2 [
    (buf.validate.field).float.lte = 180,
    (buf.validate.field).float.gte = -180
  ];
}

message Forecaster {
  /* The name of the forecaster to use.
   * The name must be at least 3 characters long, and cannot be changed once set.
   */
  string forecaster_name = 1 [
    (buf.validate.field).string.min_len = 3
  ];
  /* The version of the forecaster to use. If not specified, the latest version will be used.
   */
  string forecaster_version = 2;
}

message TimeWindow {
  /* The start of the time window, inclusive.
   * Cannot be more than 7 days before end_timestamp_utc.
   */
  google.protobuf.Timestamp start_timestamp_utc = 1 [
    (buf.validate.field).timestamp = { gt: { seconds: 112000000}, lt_now: true }
  ];
  /* The end of the time window, inclusive.
   * Cannot be more than 7 days after start_timestamp_utc.
   */
  google.protobuf.Timestamp end_timestamp_utc = 2 [
    (buf.validate.field).timestamp.gt = { seconds: 112000000}
  ];

  option (buf.validate.message).cel = {
    id: "maximum_window_size"
    message: "window size must not exceed 7 days"
    expression: "this.end_timestamp_utc - this.start_timestamp_utc <= duration('604800s')"
  };
  option (buf.validate.message).cel = {
    id: "start_before_end"
    message: "start_timestamp_utc must be before end_timestamp_utc"
    expression: "this.start_timestamp_utc <= this.end_timestamp_utc"
  };
}

// --- Requests and Responses --------------------------------------------------------

message GetForecastAsTimeseriesRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  EnergySource energy_source = 2;

  uint32 horizon_mins = 3;
  TimeWindow time_window = 4 [
    (buf.validate.field).required = true
  ];
  Forecaster forecaster = 5 [
    (buf.validate.field).required = true
  ];
}

message GetForecastAsTimeseriesResponse {
  message Value {
    google.protobuf.Timestamp timestamp_utc = 1;
    float p50_value_percent = 2;
    float p10_value_percent = 3;
    float p90_value_percent = 4;
    uint64 effective_capacity_watts = 5;
  }

  string location_uuid = 1;
  string location_name = 2;
  repeated GetForecastAsTimeseriesResponse.Value values = 3;
}


message GetObservationsAsTimeseriesRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  string observer_name = 2 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
  EnergySource energy_source = 3;
  TimeWindow time_window = 4 [
    (buf.validate.field).required = true
  ];
}

message GetObservationsAsTimeseriesResponse {
  message Value {
    google.protobuf.Timestamp timestamp_utc = 1;
    float value_percent = 2;
    uint64 effective_capacity_watts = 3;
  }

  string location_uuid = 1;
  string location_name = 2;
  repeated Value values = 3;
}


message GetForecastAtTimestampRequest {
  repeated string location_uuids = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 1000,
    (buf.validate.field).repeated.unique = true,
    (buf.validate.field).repeated.items = {
      string: {uuid: true}
    }
  ];
  EnergySource energy_source = 2;
  /* The time to fetch predicted yields for.
   * If not specified, the current time will be used.
   */
  google.protobuf.Timestamp timestamp_utc = 3;
  Forecaster forecaster = 4 [
    (buf.validate.field).required = true
  ];
}

message GetForecastAtTimestampResponse {
  message Value {
    string location_uuid = 1;
    string location_name = 2;
    float value_percent = 3;
    uint64 effective_capacity_watts = 4;
    LatLng latlng = 5;
  }

  google.protobuf.Timestamp timestamp_utc = 1;
  repeated Value values = 2;
}


message GetLatestForecastsRequest {
  repeated string location_uuids = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 1000,
    (buf.validate.field).repeated.unique = true,
    (buf.validate.field).repeated.items = {
      string: {uuid: true}
    }
  ];
  EnergySource energy_source = 2;
  /* The time to search backwards from to find the 'latest' forecast.
   * If not specified, the current time will be used.
   */
  google.protobuf.Timestamp pivot_timestamp_utc = 3;
}

message GetLatestForecastsResponse {
  message Forecast {
    google.protobuf.Timestamp initialization_timestamp_utc = 1;
    Forecaster forecaster = 2;
    string location_uuid = 3;
    string location_name = 4;
  }

  repeated GetLatestForecastsResponse.Forecast forecasts = 1;
}


message CreateForecasterRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
  string version = 2 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 100
  ];
}

message CreateForecasterResponse {
  Forecaster forecaster = 1;
}

message UpdateForecasterRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
  string new_version = 2 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 100
  ];
}

message UpdateForecasterResponse {
  Forecaster forecaster = 1;
}


message CreateForecastRequest {
  message ForecastValue {
    uint32 horizon_mins = 1;
    float p50_pct = 2 [
      (buf.validate.field).required = true,
      (buf.validate.field).float.gte = 0,
      (buf.validate.field).float.lte = 110
    ];
    float p10_pct = 3 [
      (buf.validate.field).required = true,
      (buf.validate.field).float.gte = 0,
      (buf.validate.field).float.lte = 110
    ];
    float p90_pct = 4 [
      (buf.validate.field).required = true,
      (buf.validate.field).float.gte = 0,
      (buf.validate.field).float.lte = 110
    ];
    optional google.protobuf.Struct metadata = 5;
  }

  message Forecast {
    Forecaster forecaster = 1 [
      (buf.validate.field).required = true
    ];
    string location_uuid = 2 [
      (buf.validate.field).string.uuid = true
    ];
    EnergySource energy_source = 3;
    google.protobuf.Timestamp init_time_utc = 4 [
      (buf.validate.field).timestamp = { gt: { seconds: 112000000}, lt_now: true }
    ];
  }

  CreateForecastRequest.Forecast forecast = 1 [
    (buf.validate.field).required = true
  ];
  repeated CreateForecastRequest.ForecastValue values = 2 [
    (buf.validate.field).repeated.min_items = 10,
    (buf.validate.field).repeated.max_items = 5000
  ];
}

message CreateForecastResponse {
  int64 forecast_id = 1;
}


message CreateLocationRequest {
  string location_name = 1 [
    (buf.validate.field).string.(valid_location_name) = true
  ];
  EnergySource energy_source = 2;
  string geometry_wkt = 3 [
    (buf.validate.field).string.(valid_geometry) = true,
    (buf.validate.field).string.example = "POLYGON ((-0.127 51.507, -0.127 51.507, -0.127 51.507, -0.127 51.507))"
  ];
  uint64 capacity_watts = 4 [
    (buf.validate.field).required = true
  ];
  LocationType location_type = 5;
  optional google.protobuf.Struct metadata = 6;
}

message CreateLocationResponse {
  string location_uuid = 1;
  string location_name = 2;
  uint64 capacity_watts = 3;
}


message GetLocationRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  EnergySource energy_source = 2;
  bool include_geometry = 3;
}

message GetLocationResponse {
  string location_uuid = 1;
  string location_name = 2;
  LatLng latlng = 3;
  uint64 capacity_watts = 4;
  google.protobuf.Struct metadata = 5;
  optional bytes geometry_wkb = 6;
}


message GetLocationsAsGeoJSONRequest {
  repeated string location_uuids = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 1000,
    (buf.validate.field).repeated.unique = true,
    (buf.validate.field).repeated.items = {
      string: {uuid:  true}
    } 
  ];
  /* If true, the GeoJSON will not be simplified.
   * Defaults to false if not set to reduce response size.
   */
  bool unsimplified = 2;
}

message GetLocationsAsGeoJSONResponse {
  string geojson = 1;
}


message CreateObservationsRequest {
  message Value {
    google.protobuf.Timestamp timestamp_utc = 1;
    float value_percent = 2 [
      (buf.validate.field).required = true,
      (buf.validate.field).float.gte = 0,
      (buf.validate.field).float.lte = 110
    ];
    uint64 effective_capacity_watts = 3 [
      (buf.validate.field).required = true
    ];
  }

  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  EnergySource energy_source = 2;
  string observer_name = 3 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
  repeated CreateObservationsRequest.Value values = 4 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 10000
  ];
}

message CreateObservationsResponse {}


message CreateObserverRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
}

message CreateObserverResponse {
  int32 observer_id = 1;
  string observer_name = 2;
}


message GetWeekAverageDeltasRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  EnergySource energy_source = 2;
  /* The characteristic time to detrmine averages for.
   * The time component specifies the initialization time,
   * and the date component is to define the end of the seven-day period
   * over which to average.
   */
  google.protobuf.Timestamp pivot_time = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).timestamp = { gt: { seconds: 112000000}, lt_now: true }
  ];
  Forecaster forecaster = 4 [
    (buf.validate.field).required = true
  ];
  string observer_name = 5 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 100
  ];
}

message GetWeekAverageDeltasResponse {
  message AverageDelta {
    uint32 horizon_mins = 1;
    float delta_percent = 2;
    uint64 effective_capacity_watts = 3;
  }

  repeated AverageDelta deltas = 1;
  /* The initialisation time that was compared across the week.
   * Formatted as HH:MM, e.g. "12:00"
   */
  string init_time_of_day = 2 [
    (buf.validate.field).string.pattern = "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
  ];
}

message GetLocationsWithinRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
}

message GetLocationsWithinResponse {
  message LocationData {
    string location_uuid = 1;
    string location_name = 2;
  }

  repeated GetLocationsWithinResponse.LocationData locations = 1;
}

message StreamForecastDataRequest {
  string location_uuid = 1 [
    (buf.validate.field).string.uuid = true
  ];
  EnergySource energy_source = 2;
  TimeWindow time_window = 3 [
    (buf.validate.field).required = true
  ];
  repeated Forecaster forecasters = 4 [
    (buf.validate.field).required = true,
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 20
  ];
}

message StreamForecastDataResponse {
  google.protobuf.Timestamp init_timestamp = 1;
  string location_uuid = 2;
  string forecaster_fullname = 3;
  uint32 horizon_mins = 4;
  optional float p10_percent = 5;
  float p50_percent = 6;
  optional float p90_percent = 7;
}

