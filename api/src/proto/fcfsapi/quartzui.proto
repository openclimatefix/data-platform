// Messages for the QuartzUI procedures of the QuartzAPI service.

syntax = "proto3";

package fcfsapi;

import "fcfsapi/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/devsjc/fcfs/api/src/internal/models/fcfsapi;fcfsapi";


// --- Common Message Types ---------------------------------------------------
message YieldPrediction {

  message Uncertainty {
    int64 lower_kw = 1; 
    int64 upper_kw = 2; 
  }
  
  int64 yield_kw = 1;
  int64 timestamp_unix = 2;
  Uncertainty uncertainty = 3;
}

message YieldDelta {
  sint64 delta_kw = 1;
  int64 timestamp_unix = 2;
}

// --- Requests and Responses --------------------------------------------------------

message GetPredictedTimeseriesRequest {
  repeated int32 location_ids = 1;
  fcfsapi.EnergySource energy_source = 2;

  /** The desired minimum difference between the forecast initialisation time,
   * and each target time in minutes.
   * A value of 0 gives the most recently predicted values for each target time (default).
   */
  int32 horizon_mins = 3;
}

message GetPredictedTimeseriesResponse {
  int32 location_id = 1;
  repeated YieldPrediction yields = 2;
}


message GetPredictedTimeseriesDeltasRequest {
  int32 location_id = 1;
  fcfsapi.EnergySource energy_source = 2;

  /** The desired difference between the initialisation time and the target time in minutes.
   * 0 gives the most recently predicted deltas, and is the default if not specified.
   */
  int32 horizon_mins = 3;
  /** The name of the desired model to fetch predicted yields from.
   * If not specified, the default model will be used.
   */
  string model_name = 4;
  /** The version of the model to fetch predicted yields from.
   * If not specified, the latest version of the named model will be used.
   */
  string model_version = 5;
  /** The name of the provider of observed yields to fetch from.
   * If not specified, the default observer will be used.
   */
  string observer_name = 6;
}

message GetPredictedTimeseriesDeltasResponse {
  int32 location_id = 1;
  repeated YieldDelta deltas = 2;
}


message GetObservedTimeseriesRequest {
  int32 location_id = 1;
  string observer_name = 2;
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;
}

message GetObservedTimeseriesResponse {
  int32 location_id = 1;
  repeated fcfsapi.Yield yields = 2;
}


message GetPredictedCrossSectionRequest {
  repeated int32 location_ids = 1;
  fcfsapi.EnergySource energy_source = 2;
  int64 timestamp_unix = 3;
}

message GetPredictedCrossSectionResponse {
 
  message YieldPredictionAtLocation {
    int32 location_id = 1;
    int64 yield_kw = 2;
  }

  int64 timestamp_unix = 1;
  repeated YieldPredictionAtLocation yields = 2;
}


message GetLatestForecastRequest {
  int32 location_id = 1;
  fcfsapi.EnergySource energy_source = 2;
}

message GetLatestForecastResponse {
  int32 location_id = 1;
  int64 forecast_id = 2;
  repeated YieldPrediction yields = 3;
}

