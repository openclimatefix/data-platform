syntax = "proto3";

option go_package = "github.com/devsjc/fcfs/api/src/proto";

package api;

service QuartzAPI {
  /* GetPredictedTimeseriesRequest is a request for a set of predicted yields for one or more locations.
   * The response is a stream of GetPredictedTimeseriesResponse messages.
   * each containing the predicted yields for a single location. */
  rpc GetPredictedTimeseries(GetPredictedTimeseriesRequest) returns (stream GetPredictedTimeseriesResponse) {}
  /* GetActualTimeseriesRequest is a request for a set of actual yields for one or more locations.
   * The response is a stream of GetActualTimeseriesResponse messages.
   * each containing the actual yields for a single location. */
  rpc GetActualTimeseries(GetActualTimeseriesRequest) returns (stream GetActualTimeseriesResponse) {}
  /* GetPredictedCrossSectionRequest is a request for a specific predicted yield for one or more locations
   * at a single timestamp. The response is a GetPredictedCrossSectionResponse message containing the
   * predicted yields for each location. */
  rpc GetActualCrossSection(GetActualCrossSectionRequest) returns (GetActualCrossSectionResponse) {}
  /* GetActualCrossSectionRequest is a request for a specific actual yield for one or more locations
   * at a single timestamp. The response is a GetActualCrossSectionResponse message containing the
   * actual yields for each location. */
  rpc GetPredictedCrossSection(GetPredictedCrossSectionRequest) returns (GetPredictedCrossSectionResponse) {}
  /* GetLocationMetadataRequest is a request for the metadata for a single location.
   * The response is a GetLocationMetadataResponse message containing the metadata for the location. */
  rpc GetLocationMetadata(GetLocationMetadataRequest) returns (GetLocationMetadataResponse) {}
}

// --- GetPredictedTimeseries --------------------------------------------------------
message GetPredictedTimeseriesRequest {
  repeated string location_ids = 1;
}

message GetPredictedTimeseriesResponse {
  string location_id = 1;
  repeated PredictedYield yields = 2;
}

message PredictedYield {
  int32 yield_kw = 1;
  int64 timestamp_unix = 2;
  PredictedYieldUncertainty uncertainty = 3;
}

message PredictedYieldUncertainty {
  int32 lower_kw = 1;
  int32 upper_kw = 2;
}

// --- GetActualTimeseries -----------------------------------------------------------
message GetActualTimeseriesRequest {
  repeated string location_ids = 1;
}

message GetActualTimeseriesResponse {
  string location_id = 1;
  repeated ActualYield yields = 2;
}

message ActualYield {
  int32 yield_kw = 1;
  int64 timestamp_unix = 2;
}

// --- GetPredictedCrossSection ------------------------------------------------------
message GetPredictedCrossSectionRequest {
  repeated string location_ids = 1;
  int64 timestamp_unix = 2;
}

message GetPredictedCrossSectionResponse {
  int64 timestamp_unix = 1;
  repeated PredictedYieldAtLocation yields = 2;
}

message PredictedYieldAtLocation {
  string location_id = 1;
  int32 yield_kw = 2;
  PredictedYieldUncertainty uncertainty = 3;
}

// --- GetActualCrossSection ---------------------------------------------------------
message GetActualCrossSectionRequest {
  repeated string location_ids = 1;
  int64 timestamp_unix = 2;
}

message GetActualCrossSectionResponse {
  int64 timestamp_unix = 1;
  repeated ActualYieldAtLocation yields = 2;
}

message ActualYieldAtLocation {
  string location_id = 1;
  int32 yield_kw = 2;
}

// --- GetLocations -----------------------------------------------------------
enum EnergySource  {
  UNKNOWN = 0;
  SITE = 1;
  REGION = 2;
}

message SiteLocationMetadata {
  float latitude = 2;
  float longitude = 3;
  int32 orientation_deg = 4;
  int32 tilt_deg = 5;
  int32 capacity_kw = 6;
}

message RegionLocationMetadata {
  string regionName = 1;
  string gspName = 2;
  string capacity_kw = 3;
}

message NationLocationMetadata {
  string nationName = 1;
  string capacity_kw = 2;
}

