// Common messages for the Quartz API

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fcfsapi/common.proto

package fcfsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnergySource int32

const (
	EnergySource_ENERGY_SOURCE_UNSPECIFIED EnergySource = 0
	EnergySource_ENERGY_SOURCE_SOLAR       EnergySource = 1
	EnergySource_ENERGY_SOURCE_WIND        EnergySource = 2
)

// Enum value maps for EnergySource.
var (
	EnergySource_name = map[int32]string{
		0: "ENERGY_SOURCE_UNSPECIFIED",
		1: "ENERGY_SOURCE_SOLAR",
		2: "ENERGY_SOURCE_WIND",
	}
	EnergySource_value = map[string]int32{
		"ENERGY_SOURCE_UNSPECIFIED": 0,
		"ENERGY_SOURCE_SOLAR":       1,
		"ENERGY_SOURCE_WIND":        2,
	}
)

func (x EnergySource) Enum() *EnergySource {
	p := new(EnergySource)
	*p = x
	return p
}

func (x EnergySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnergySource) Descriptor() protoreflect.EnumDescriptor {
	return file_fcfsapi_common_proto_enumTypes[0].Descriptor()
}

func (EnergySource) Type() protoreflect.EnumType {
	return &file_fcfsapi_common_proto_enumTypes[0]
}

func (x EnergySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnergySource.Descriptor instead.
func (EnergySource) EnumDescriptor() ([]byte, []int) {
	return file_fcfsapi_common_proto_rawDescGZIP(), []int{0}
}

type Yield struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	YieldKw       int64                  `protobuf:"varint,1,opt,name=yield_kw,json=yieldKw,proto3" json:"yield_kw,omitempty"`
	TimestampUnix int64                  `protobuf:"varint,2,opt,name=timestamp_unix,json=timestampUnix,proto3" json:"timestamp_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Yield) Reset() {
	*x = Yield{}
	mi := &file_fcfsapi_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Yield) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Yield) ProtoMessage() {}

func (x *Yield) ProtoReflect() protoreflect.Message {
	mi := &file_fcfsapi_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Yield.ProtoReflect.Descriptor instead.
func (*Yield) Descriptor() ([]byte, []int) {
	return file_fcfsapi_common_proto_rawDescGZIP(), []int{0}
}

func (x *Yield) GetYieldKw() int64 {
	if x != nil {
		return x.YieldKw
	}
	return 0
}

func (x *Yield) GetTimestampUnix() int64 {
	if x != nil {
		return x.TimestampUnix
	}
	return 0
}

var File_fcfsapi_common_proto protoreflect.FileDescriptor

const file_fcfsapi_common_proto_rawDesc = "" +
	"\n" +
	"\x14fcfsapi/common.proto\x12\afcfsapi\"I\n" +
	"\x05Yield\x12\x19\n" +
	"\byield_kw\x18\x01 \x01(\x03R\ayieldKw\x12%\n" +
	"\x0etimestamp_unix\x18\x02 \x01(\x03R\rtimestampUnix*^\n" +
	"\fEnergySource\x12\x1d\n" +
	"\x19ENERGY_SOURCE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13ENERGY_SOURCE_SOLAR\x10\x01\x12\x16\n" +
	"\x12ENERGY_SOURCE_WIND\x10\x02B@Z>github.com/devsjc/fcfs/api/src/internal/models/fcfsapi;fcfsapib\x06proto3"

var (
	file_fcfsapi_common_proto_rawDescOnce sync.Once
	file_fcfsapi_common_proto_rawDescData []byte
)

func file_fcfsapi_common_proto_rawDescGZIP() []byte {
	file_fcfsapi_common_proto_rawDescOnce.Do(func() {
		file_fcfsapi_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fcfsapi_common_proto_rawDesc), len(file_fcfsapi_common_proto_rawDesc)))
	})
	return file_fcfsapi_common_proto_rawDescData
}

var file_fcfsapi_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fcfsapi_common_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fcfsapi_common_proto_goTypes = []any{
	(EnergySource)(0), // 0: fcfsapi.EnergySource
	(*Yield)(nil),     // 1: fcfsapi.Yield
}
var file_fcfsapi_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fcfsapi_common_proto_init() }
func file_fcfsapi_common_proto_init() {
	if File_fcfsapi_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fcfsapi_common_proto_rawDesc), len(file_fcfsapi_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fcfsapi_common_proto_goTypes,
		DependencyIndexes: file_fcfsapi_common_proto_depIdxs,
		EnumInfos:         file_fcfsapi_common_proto_enumTypes,
		MessageInfos:      file_fcfsapi_common_proto_msgTypes,
	}.Build()
	File_fcfsapi_common_proto = out.File
	file_fcfsapi_common_proto_goTypes = nil
	file_fcfsapi_common_proto_depIdxs = nil
}
