# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: fcfs/messages/forecast.proto, fcfs/messages/location.proto, fcfs/messages/quartzui.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime
from typing import List

import betterproto


@dataclass
class CreateModelRequest(betterproto.Message):
    name: str = betterproto.string_field(1)
    version: str = betterproto.string_field(2)


@dataclass
class CreateModelResponse(betterproto.Message):
    model_id: int = betterproto.int64_field(1)


@dataclass
class PredictedGenerationValue(betterproto.Message):
    forecast_id: int = betterproto.int64_field(1)
    horizon_mins: int = betterproto.int64_field(2)
    p50: int = betterproto.int32_field(3)
    p10: int = betterproto.int32_field(4)
    p90: int = betterproto.int32_field(5)
    metadata: str = betterproto.string_field(6)


@dataclass
class Forecast(betterproto.Message):
    model_id: int = betterproto.int64_field(1)
    location_id: str = betterproto.string_field(2)
    init_time_utc: datetime = betterproto.message_field(3)


@dataclass
class CreateForecastRequest(betterproto.Message):
    forecast: "Forecast" = betterproto.message_field(1)
    predicted_generation_values: List["PredictedGenerationValue"] = (
        betterproto.message_field(2)
    )


@dataclass
class CreateForecastsResponse(betterproto.Message):
    forecast_id: int = betterproto.int64_field(1)


@dataclass
class CreateSiteRequest(betterproto.Message):
    """
    --- Locations
    ----------------------------------------------------------------
    """

    name: str = betterproto.string_field(1)
    latitude: float = betterproto.float_field(2)
    longitude: float = betterproto.float_field(3)
    capacity_kw: int = betterproto.int32_field(4)
    metadata: str = betterproto.string_field(5)


@dataclass
class CreateGspRequest(betterproto.Message):
    name: str = betterproto.string_field(1)
    geometry: str = betterproto.string_field(2)
    capacity_mw: int = betterproto.int32_field(3)
    metadata: str = betterproto.string_field(4)


@dataclass
class CreateLocationResponse(betterproto.Message):
    location_id: int = betterproto.int64_field(1)


@dataclass
class GetLocationRequest(betterproto.Message):
    location_id: str = betterproto.string_field(1)


@dataclass
class GetLocationResponse(betterproto.Message):
    location_id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    latitude: float = betterproto.float_field(3)
    longitude: float = betterproto.float_field(4)
    capacity_kw: int = betterproto.int32_field(5)
    metadata: str = betterproto.string_field(6)


@dataclass
class GetPredictedTimeseriesRequest(betterproto.Message):
    """
    --- GetPredictedTimeseries
    --------------------------------------------------------
    """

    location_ids: List[str] = betterproto.string_field(1)


@dataclass
class GetPredictedTimeseriesResponse(betterproto.Message):
    location_id: str = betterproto.string_field(1)
    yields: List["PredictedYield"] = betterproto.message_field(2)


@dataclass
class PredictedYield(betterproto.Message):
    yield_kw: int = betterproto.int32_field(1)
    timestamp_unix: int = betterproto.int64_field(2)
    uncertainty: "PredictedYieldUncertainty" = betterproto.message_field(3)


@dataclass
class PredictedYieldUncertainty(betterproto.Message):
    lower_kw: int = betterproto.int32_field(1)
    upper_kw: int = betterproto.int32_field(2)


@dataclass
class GetActualTimeseriesRequest(betterproto.Message):
    """
    --- GetActualTimeseries
    -----------------------------------------------------------
    """

    location_ids: List[str] = betterproto.string_field(1)


@dataclass
class GetActualTimeseriesResponse(betterproto.Message):
    location_id: str = betterproto.string_field(1)
    yields: List["ActualYield"] = betterproto.message_field(2)


@dataclass
class ActualYield(betterproto.Message):
    yield_kw: int = betterproto.int32_field(1)
    timestamp_unix: int = betterproto.int64_field(2)


@dataclass
class GetPredictedCrossSectionRequest(betterproto.Message):
    """
    --- GetPredictedCrossSection
    ------------------------------------------------------
    """

    location_ids: List[str] = betterproto.string_field(1)
    timestamp_unix: int = betterproto.int64_field(2)


@dataclass
class GetPredictedCrossSectionResponse(betterproto.Message):
    timestamp_unix: int = betterproto.int64_field(1)
    yields: List["PredictedYieldAtLocation"] = betterproto.message_field(2)


@dataclass
class PredictedYieldAtLocation(betterproto.Message):
    location_id: str = betterproto.string_field(1)
    yield_kw: int = betterproto.int32_field(2)
    uncertainty: "PredictedYieldUncertainty" = betterproto.message_field(3)


@dataclass
class GetActualCrossSectionRequest(betterproto.Message):
    """
    --- GetActualCrossSection
    ---------------------------------------------------------
    """

    location_ids: List[str] = betterproto.string_field(1)
    timestamp_unix: int = betterproto.int64_field(2)


@dataclass
class GetActualCrossSectionResponse(betterproto.Message):
    timestamp_unix: int = betterproto.int64_field(1)
    yields: List["ActualYieldAtLocation"] = betterproto.message_field(2)


@dataclass
class ActualYieldAtLocation(betterproto.Message):
    location_id: str = betterproto.string_field(1)
    yield_kw: int = betterproto.int32_field(2)
